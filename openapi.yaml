openapi: 3.0.0
info:
  title: Jobs API
  contact: {}
  version: "1.0"
servers:
- url: https://relieved-bonnet-slug.cyclic.cloud/api/v1
tags:
- name: Auth
  description: ""
- name: Jobs
  description: ""
paths:
  /auth/register:
    post:
      tags:
      - Auth
      summary: Register
      operationId: Register
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_register_body'
            example:
              name: Rane
              email: rane@domain.com
              password: secrete
        required: true
      responses:
        "200":
          description: ""
      deprecated: false
      security: []
      x-swagger-router-controller: Auth
  /auth/login:
    post:
      tags:
      - Auth
      summary: Login
      operationId: Login
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_login_body'
            example:
              name: Rane
              email: rane@domain.com
              password: secrete
        required: true
      responses:
        "200":
          description: ""
      deprecated: false
      security: []
      x-swagger-router-controller: Auth
  /jobs:
    post:
      tags:
      - Jobs
      summary: Create_Job
      operationId: Create_Job
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jobs_body'
            example:
              company: BMW
              position: Automobile Engineer
        required: true
      responses:
        "200":
          description: ""
      deprecated: false
      security:
      - bearer: []
      x-swagger-router-controller: Jobs
    get:
      tags:
      - Jobs
      summary: Get All Jobs
      operationId: GetAllJobs
      parameters: []
      responses:
        "200":
          description: ""
      deprecated: false
      security:
      - bearer: []
      x-swagger-router-controller: Jobs
    
  /jobs/{id}:
    get:
      tags:
      - Jobs
      summary: Get Single Job
      operationId: GetSingleJob
      parameters:
      - name: id
        in: path
        description: The job ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ""
      deprecated: false
      security:
      - bearer: []
      x-swagger-router-controller: Jobs
    
    patch:
      tags:
      - Jobs
      summary: Update Job
      operationId: UpdateJob
      parameters:
      - name: id
        in: path
        description: The job ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jobs_id_body'
            example:
              company: Nginx
              position: Application Developer
              status: Interview
        required: true
      responses:
        "200":
          description: ""
      deprecated: false
      security:
      - bearer: []
      x-swagger-router-controller: Jobs
    delete:
      tags:
      - Jobs
      summary: Delete Job
      operationId: DeleteJob
      parameters:
      - name: id
        in: path
        description: The job ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ""
      deprecated: false
      security:
      - bearer: []
      x-swagger-router-controller: Jobs
components:
  schemas:
    RegisterRequest:
      title: RegisterRequest
      required:
      - email
      - name
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: Rane
        email: rane@domain.com
        password: secrete
    LoginRequest:
      title: LoginRequest
      required:
      - email
      - name
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: Rane
        email: rane@domain.com
        password: secrete
    Create_Job_Request:
      title: Create_Job_Request
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: BMW
        position: Automobile Engineer
    UpdateJobRequest:
      title: UpdateJobRequest
      required:
      - company
      - position
      - status
      type: object
      properties:
        company:
          type: string
        position:
          type: string
        status:
          type: string
      example:
        company: Nginx
        position: Application Developer
        status: Interview
    auth_register_body:
      allOf:
      - $ref: '#/components/schemas/RegisterRequest'
      - example:
          name: Rane
          email: rane@domain.com
          password: secrete
    auth_login_body:
      allOf:
      - $ref: '#/components/schemas/LoginRequest'
      - example:
          name: Rane
          email: rane@domain.com
          password: secrete
    jobs_body:
      allOf:
      - $ref: '#/components/schemas/Create_Job_Request'
      - example:
          company: BMW
          position: Automobile Engineer
    jobs_id_body:
      allOf:
      - $ref: '#/components/schemas/UpdateJobRequest'
      - example:
          company: Nginx
          position: Application Developer
          status: Interview
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
